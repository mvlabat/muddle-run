on:
  push:
    branches: [main]
    paths:
      - '.github/workflows/**'
      - 'bins/**'
      - 'libs/**'
      - 'Cargo.*'
      - 'rust-toolchain'
      - '.rustfmt.toml'
      - '.cargo/config'
  pull_request:
    branches: [main]
    paths:
      - '.github/workflows/**'
      - 'bins/**'
      - 'libs/**'
      - 'Cargo.*'
      - 'rust-toolchain'
      - '.rustfmt.toml'
      - '.cargo/config'

name: Check

jobs:
  rustfmt:
    name: Rustfmt check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  mr_desktop_client:
    name: Check mr_desktop_client
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cache-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cache-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            cache-${{ runner.os }}-cargo
      - name: Install alsa
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev
        if: ${{ runner.os == 'Linux' }}
      - name: Install udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libudev-dev
        if: ${{ runner.os == 'Linux' }}
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -p mr_desktop_client --release -- -D warnings

  mr_web_client:
    name: Check mr_web_client
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          target: wasm32-unknown-unknown
          override: true
          components: clippy
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cache-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cache-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            cache-${{ runner.os }}-cargo
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -p mr_web_client --release --target wasm32-unknown-unknown --features "ud-login" -- -D warnings

  mr_server:
    name: Check mr_server
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cache-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cache-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            cache-${{ runner.os }}-cargo
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -p mr_server --features "use-udp" --release -- -D warnings

  mr_matchmaker:
    name: Check mr_matchmaker
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cache-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cache-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            cache-${{ runner.os }}-cargo
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -p mr_matchmaker --release -- -D warnings

  mr_lib_shared:
    name: Test mr_lib_shared
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cache-${{ runner.os }}-cargo-debug-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cache-${{ runner.os }}-cargo-debug-${{ hashFiles('**/Cargo.lock') }}
            cache-${{ runner.os }}-cargo-debug
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p mr_shared_lib
